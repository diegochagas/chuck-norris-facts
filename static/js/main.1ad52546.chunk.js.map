{"version":3,"sources":["logo.svg","components/Header.js","actions/types.js","actions/index.js","components/ProgressBar.js","components/ErrorMessage.js","components/Categories.js","apis/ChuckNorrisAPI.js","sagas/categoriesSaga.js","sagas/randomJokeSaga.js","sagas/index.js","reducers/categoriesReducer.js","reducers/index.js","reducers/jokesReducer.js","store/index.js","components/Jokes.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","react_router_dom","to","Component","types","CATEGORIES_LOAD","CATEGORIES_LOAD_SUCCESS","CATEGORIES_LOAD_FAIL","JOKE_LOAD","JOKE_LOAD_SUCCESS","JOKE_LOAD_FAIL","JOKE_RESET","setCategories","categories","type","payload","setError","error","setJoke","joke","setErrorJoke","ProgressBar","data-test","ErrorMessage","this","props","message","React","Categories","loadCategories","_this$props","isLoadingCategories","errorCategories","length","renderCategories","components_ProgressBar","src_components_ErrorMessage","map","categorie","key","concat","connect","_ref","dispatch","instance","axios","create","baseURL","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","apply","arguments","randomJoke","_ref2","_callee2","category","_context2","_x","handleCategoriesLoad","watchCategoriesLoad","response","call","put","data","t0","toString","_marked","takeLatest","_marked2","handleJokeLoad","watchJokeLoad","action","randomJokeSaga_marked","randomJokeSaga_marked2","rootSaga","all","sagas_marked","INITIAL_STATE","rootReducer","combineReducers","state","undefined","jokes","toConsumableArray","isLoadingJokes","errorJokes","configureStore","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","Jokes","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","onClickLoadJoke","bind","assertThisInitialized","inherits","createClass","value","getCategoryProp","match","loadJoke","renderJoke","renderButtons","_this2","index","icon_url","updated_at","formatDate","onClick","resetJoke","params","dateText","date","Date","day","getDate","getMonth","getFullYear","hour","getHours","getMinutes","getSeconds","ownProps","App","es","src_components_Header","react_router","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1ad52546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.95605289.svg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <h1 className=\"App-branch\">\r\n                    <Link className=\"App-link\" to=\"/\" >Chuck Norris Facts</Link>\r\n                </h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","const types = {\r\n    CATEGORIES_LOAD: \"CATEGORIES_LOAD\",\r\n    CATEGORIES_LOAD_SUCCESS: \"CATEGORIES_LOAD_SUCCESS\",\r\n    CATEGORIES_LOAD_FAIL: \"CATEGORIES_LOAD_FAIL\",\r\n    JOKE_LOAD: \"JOKE_LOAD\",\r\n    JOKE_LOAD_SUCCESS: \"JOKE_LOAD_SUCCESS\",\r\n    JOKE_LOAD_FAIL: \"JOKE_LOAD_FAIL\",\r\n    JOKE_RESET: \"JOKE_RESET\"\r\n}\r\n\r\nexport default types;","import types from './types';\r\n\r\nexport const loadCategories = () => ({\r\n    type: types.CATEGORIES_LOAD\r\n});\r\n\r\nexport const setCategories = categories => ({\r\n    type: types.CATEGORIES_LOAD_SUCCESS,\r\n    payload: categories\r\n});\r\n\r\nexport const setError = error => ({\r\n    type: types.CATEGORIES_LOAD_FAIL,\r\n    payload: error\r\n});\r\n\r\nexport const loadJoke = category => ({\r\n    type: types.JOKE_LOAD,\r\n    payload: category\r\n});\r\n\r\nexport const setJoke = joke => ({\r\n    type: types.JOKE_LOAD_SUCCESS,\r\n    payload: joke\r\n});\r\n\r\nexport const resetJoke = joke => ({\r\n    type: types.JOKE_RESET,\r\n    payload: joke\r\n});\r\n\r\nexport const setErrorJoke = error => ({\r\n    type: types.JOKE_LOAD_FAIL,\r\n    payload: error\r\n});","import React from 'react';\r\nimport './ProgressBar.scss';\r\n\r\nfunction ProgressBar () {\r\n    return (\r\n        <div className=\"progress-bar\" data-test=\"progress\">\r\n            <h2>Loading...</h2>\r\n            <progress></progress>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport './ErrorMessage.scss';\r\n\r\nclass ErrorMessage extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"error-message\" data-test=\"error\">\r\n                <h2>{this.props.message}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { loadCategories } from '../actions';\r\nimport './Categories.scss';\r\nimport ProgressBar from './ProgressBar';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nclass Categories extends React.Component {\r\n    componentDidMount () {\r\n        this.props.loadCategories();\r\n    }\r\n\r\n    render () {\r\n        const { categories, isLoadingCategories, errorCategories } = this.props;\r\n        return (\r\n            <div className=\"categories\" data-test=\"categories\">\r\n                <div className=\"box-title\">\r\n                    <h2>Categories</h2>\r\n                </div>\r\n                { categories.length > 0 ? this.renderCategories(): null }\r\n                { isLoadingCategories ? (<ProgressBar/>) : null }\r\n                { errorCategories !== null ? (<ErrorMessage message={errorCategories} />) : null }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderCategories() {\r\n        return (\r\n            <ol className=\"categories__list\">\r\n                {this.props.categories.map(categorie => {\r\n                    return (\r\n                        <li key={categorie}>\r\n                            <Link \r\n                                className=\"categories__list__item\" \r\n                                to={`/jokes/${categorie}`}\r\n                            >\r\n                                {categorie}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ol>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ categories, isLoadingCategories, errorCategories }) => ({\r\n    categories, isLoadingCategories, errorCategories    \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadCategories: () => dispatch(loadCategories())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import axios from 'axios';\r\n\r\nconst instance = axios.create({ baseURL: 'https://api.chucknorris.io/jokes' });\r\n\r\nexport const categories = async () => await instance.get(`/categories`);\r\n\r\nexport const randomJoke = async category => await instance.get(`/random?category=${category}`);","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { categories } from '../apis/ChuckNorrisAPI';\r\nimport types from '../actions/types';\r\nimport { setCategories, setError } from '../actions';\r\n\r\nfunction* handleCategoriesLoad() {\r\n    try {\r\n        const response = yield call(categories);\r\n        yield put(setCategories(response.data));\r\n    } catch (error) {\r\n        yield put(setError(error.toString()));\r\n    }\r\n}\r\n\r\nexport default function* watchCategoriesLoad() {\r\n    yield takeLatest(types.CATEGORIES_LOAD, handleCategoriesLoad);\r\n}","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { randomJoke } from '../apis/ChuckNorrisAPI';\r\nimport types from '../actions/types'; \r\nimport { setJoke, setErrorJoke } from '../actions';\r\n\r\nfunction* handleJokeLoad(action) {\r\n    try {\r\n        const response = yield call(randomJoke, action.payload);\r\n        yield put(setJoke(response.data));\r\n    } catch (error) {\r\n        yield put(setErrorJoke(error.toString()));\r\n    }\r\n}\r\n\r\nexport default function* watchJokeLoad() {\r\n    yield takeLatest(types.JOKE_LOAD, handleJokeLoad);\r\n}","import { all } from 'redux-saga/effects';\r\nimport watchCategoriesLoad from './categoriesSaga';\r\nimport watchJokeLoad from './randomJokeSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([watchCategoriesLoad(), watchJokeLoad()]);\r\n}","import types from '../actions/types';\r\n\r\nexport const INITIAL_STATE = {\r\n    categories: []\r\n}\r\n\r\nexport const categoriesReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.CATEGORIES_LOAD_SUCCESS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadingCategoriesReducer = (state = false, action) => {\r\n    switch(action.type) {\r\n        case types.CATEGORIES_LOAD:\r\n            return true;\r\n        case types.CATEGORIES_LOAD_SUCCESS:\r\n        case types.CATEGORIES_LOAD_FAIL:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const errorCategoriesReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case types.CATEGORIES_LOAD_FAIL:\r\n            return action.payload;\r\n        case types.CATEGORIES_LOAD:\r\n        case types.CATEGORIES_LOAD_SUCCESS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { categoriesReducer, loadingCategoriesReducer, errorCategoriesReducer } from './categoriesReducer';\r\nimport { jokesReducer, loadingJokesReducer, errorJokesReducer } from './jokesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    categories: categoriesReducer,\r\n    isLoadingCategories: loadingCategoriesReducer,\r\n    errorCategories: errorCategoriesReducer,\r\n    jokes: jokesReducer,\r\n    isLoadingJokes: loadingJokesReducer,\r\n    errorJokes: errorJokesReducer\r\n});\r\n\r\nexport default rootReducer;","import types from '../actions/types';\r\n\r\nexport const jokesReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case types.JOKE_LOAD_SUCCESS:\r\n            return [...state, action.payload];\r\n        case types.JOKE_RESET:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loadingJokesReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case types.JOKE_LOAD:\r\n            return true;\r\n        case types.JOKE_LOAD_SUCCESS:\r\n        case types.JOKE_LOAD_FAIL:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const errorJokesReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case types.JOKE_LOAD_FAIL:\r\n            return action.payload;\r\n        case types.JOKE_LOAD:\r\n        case types.JOKE_LOAD_SUCCESS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport reducers from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nexport default configureStore;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { loadJoke, resetJoke } from '../actions';\r\nimport ProgressBar from './ProgressBar';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport './Jokes.scss';\r\n\r\nconst Jokes = class Jokes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickLoadJoke = this.onClickLoadJoke.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const category = getCategoryProp(this.props.match);\r\n        this.props.loadJoke(category);\r\n    }\r\n\r\n    render() {\r\n        const { jokes, isLoadingJokes, errorJokes } = this.props;\r\n        const category = getCategoryProp(this.props.match);\r\n        return (\r\n            <div className=\"jokes\" data-test=\"jokes\">\r\n                <div className=\"box-title\">\r\n                    <h2>\r\n                        <span>Jokes category: </span>\r\n                        <span className=\"box-title__name\">{ category }</span>\r\n                    </h2>\r\n                </div>\r\n                { jokes.length > 0 ? this.renderJoke() : null }\r\n                { isLoadingJokes ? (<ProgressBar />) : null }\r\n                { errorJokes !== null ? (<ErrorMessage message={errorJokes} />) : null }\r\n                { jokes.length > 0 ? this.renderButtons() : null }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderJoke() {\r\n        return (\r\n            <ul className=\"joke\">\r\n                {this.props.jokes.map((joke, index) => {\r\n                    const { icon_url, value, updated_at } = joke;\r\n                    return (\r\n                        <li className=\"joke__item\" key={index}>\r\n                            <div className=\"category-content\">\r\n                                <span className=\"category-content__date\">{this.formatDate(updated_at)}</span>\r\n                                <img src={icon_url} alt=\"icon url\" className=\"category-content__icon\" />\r\n                                <span className=\"category-content__description\">\r\n                                    {value}\r\n                                </span>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    renderButtons () {\r\n        return (\r\n            <div className=\"buttons\">\r\n                <button onClick={this.onClickLoadJoke} className=\"btn\">\r\n                    Load another joke\r\n                </button>\r\n                <Link \r\n                    to=\"/\" \r\n                    className=\"btn btn-secondary\" \r\n                    onClick={this.props.resetJoke}\r\n                >\r\n                    Back\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onClickLoadJoke() {\r\n        const { category } = this.props.match.params;\r\n        this.props.loadJoke(category);\r\n    }\r\n\r\n    formatDate(dateText) {\r\n        const months = [\"JAN\", \"FEB\", \"MAR\",\"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        const date = new Date(dateText);\r\n        const day = `${date.getDate()}-${months[date.getMonth()]}-${date.getFullYear()}`;\r\n        const hour = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n        return `${day} ${hour}`;\r\n    }\r\n}\r\n\r\nconst getCategoryProp = match => match === undefined ? \"\" : match.params.category;\r\n\r\nconst mapStateToProps = ({ jokes, isLoadingJokes, errorJokes }) => ({\r\n    jokes, isLoadingJokes, errorJokes\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    loadJoke: () => dispatch(loadJoke(getCategoryProp(ownProps.match))),\r\n    resetJoke: () => dispatch(resetJoke())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Jokes);","import React from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter, Route } from 'react-router-dom'; \r\nimport { Provider } from 'react-redux';\r\nimport Header from './components/Header';\r\nimport Categories from './components/Categories';\r\nimport configureStore from './store';\r\nimport Jokes from './components/Jokes';\r\n\r\nconst store = configureStore();\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <BrowserRouter>\r\n                    <Header/>\r\n                    <div className=\"App-body\" data-test=\"app\">\r\n                        <Route path=\"/\" exact component={Categories} />\r\n                        <Route path=\"/jokes/:category\" exact component={Jokes} />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}